name: Build and Upload

on:
    [push]
permissions:
    contents: write
  
jobs:
    shellcheck:
      uses: ./.github/workflows/shellcheck.yml
    shfmt:
      uses: ./.github/workflows/shfmt.yml
    build-and-push:
        # container:
        #   image: ubuntu:22.04
        #   options: --privileged
        runs-on: ubuntu-latest
        needs: [shellcheck, shfmt]
        strategy:
            matrix:
                image: [ 
                        # mirte_orangepizero2,
                        mirte_orangepi3b
                        ]
            fail-fast: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            
            - name: setup this repo
              run: |
                    sudo apt update
                    sudo apt install qemu-user-static parted -y
                    ./packerInstall.sh
            # - name: setup build files
            #   run: |
            #         echo -e "#!/bin/bash\n\nexport INSTALL_DOCS=false\nexport INSTALL_ROS=false\nexport INSTALL_ARDUINO=false\nexport INSTALL_WEB=false\nexport INSTALL_PYTHON=false\nexport INSTALL_JUPYTER=false\nexport EXPIRE_PASSWD=true\nexport INSTALL_NETWORK=true\nexport INSTALL_PROVISIONING=true\nexport INSTALL_VSCODE=true\nexport INSTALL_PAM=true\nexport EXTRA_SCRIPTS=()\nexport PARALLEL=true" > settings.sh
            # - name: setup repos
            #   run: |
            #     cp main_repos.yaml repos.yaml
            #     yq e -i '.repositories.mirte-ros-packages.version = "fix-intro-rob"' repos.yaml
            #     yq e -i '.repositories.mirte-telemetrix4arduino.url =  "https://github.com/arendjan/telemetrix4arduino.git"' repos.yaml
            #     yq e -i '.repositories.mirte-telemetrix4arduino.version = "fix-intro-robotics"' repos.yaml
            - name: Build
              run: |
                    ./packerBuild.sh ${{ matrix.image }}
            - name: artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                path: build/*.img.xz
                name: mirte_master_${{ matrix.image }}
            - name: Push to release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: build/*.img.xz
    build_installer:
      runs-on: ubuntu-latest
      needs: [shellcheck, shfmt, build-and-push]
      steps:
            - name: Maximize build space
              uses: AdityaGarg8/remove-unwanted-software@v2
              with:
                remove-android: 'true'
                remove-dotnet: 'true'
                remove-haskell: 'true'
                remove-docker-images: 'true'
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: download artifacts
              uses: actions/download-artifact@v4
              with:
                name: mirte_master_mirte_orangepi3b
                path: build
            - name: Create installer
              run: |
                    
                    sudo apt update
                    sudo apt install qemu-user-static parted -y
                    ./packerInstall.sh
                    ls
                    ls build
                    mv build/*.img.xz build/mirte_orangepi3b.img.xz
                    xz -d build/mirte_orangepi3b.img.xz
                    df -h
                    rm -f workdir/*.img

                    ls -l build
                    df -h
                    sudo packer build buildInstaller.pkr.hcl # create installer image
                    df -h
                    sudo rm -rf /root/.cache/packer
                    df -h
                    rm -f build/${{ matrix.image }}.img
                    rm -f workdir/mirte_orangepi3b.img
                    df -h
                    ./scripts/finalize.sh $(realpath "./workdir/mirte_orangepi3b_installer.img") # finalize installer
                    df -h
            - name: artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                path: build/*.img.xz
                name: mirte_master_installer_orangepi3b
    upload_private_server:
      needs: [ build-and-push] # build_installer,
      runs-on: ubuntu-latest
      if: always()
      steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: Download artifact
              id: download
              uses: actions/download-artifact@v4
              with:
                path: upload

            - name: List artifact
              run: |
                ls ${{ github.workspace }}
                mkdir ${{ github.workspace }}/upload/mirte
                ls ${{ github.workspace }}/upload
                tree ${{ github.workspace }}/upload
                # for every file ending in .img.xz, remove last part of the path
                for file in $(find ${{ github.workspace }}/upload/ -name '*.img.xz'); do
                    f=$(basename $file)
                    echo $f
                    echo ${{ github.workspace }}/upload/mirte/"${f%_*_*_*_*}.${f#*.}"
                    mv $file ${{ github.workspace }}/upload/mirte/"${f%_*_*_*_*}.${f#*.}"
                done
            - name: Upload to private server
              run: |
                sudo apt update
                sudo apt install sshpass
                mkdir -p ~/.ssh
                ssh-keyscan arend-jan.com >> ~/.ssh/known_hosts
                export SSHPASS=${{ secrets.MIRTEFILES }}
                sshpass -e sftp mirtefiles@arend-jan.com << ASDF
                    rm files/${{ steps.extract_branch.outputs.branch }}/*
                    rmdir files/${{ steps.extract_branch.outputs.branch }}
                    mkdir files/${{ steps.extract_branch.outputs.branch }}
                    put upload/mirte/ /files/${{ steps.extract_branch.outputs.branch }}/
                    bye
                ASDF
            # - uses: Dylan700/sftp-upload-action@latest
            #   with:
            #     server: arend-jan.com
            #     username: mirtefiles
            #     password: 
            #     port: 22
            #     delete: true
            #     uploads: |
            #         ${{ github.workspace }}/upload/mirte/ => /files/${{ steps.extract_branch.outputs.branch }}/
            
