name: Build and Upload

on:
    [push]
permissions:
    contents: write
  
jobs:
    shellcheck:
      uses: ./.github/workflows/shellcheck.yml
    shfmt:
      uses: ./.github/workflows/shfmt.yml
    build-and-push:
        # container:
        #   image: ubuntu:22.04
        #   options: --privileged
        runs-on: ubuntu-latest
        needs: [shellcheck, shfmt]
        strategy:
            matrix:
                image: [ 
                        # mirte_orangepizero2,
                        mirte_orangepi3b
                        ]
            fail-fast: false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            
            - name: setup this repo
              run: |
                    sudo apt update
                    sudo apt install qemu-user-static parted -y
                    ./packerInstall.sh
            # - name: setup build files
            #   run: |
            #         echo -e "#!/bin/bash\n\nexport INSTALL_DOCS=false\nexport INSTALL_ROS=false\nexport INSTALL_ARDUINO=false\nexport INSTALL_WEB=false\nexport INSTALL_PYTHON=false\nexport INSTALL_JUPYTER=false\nexport EXPIRE_PASSWD=true\nexport INSTALL_NETWORK=true\nexport INSTALL_PROVISIONING=true\nexport INSTALL_VSCODE=true\nexport INSTALL_PAM=true\nexport EXTRA_SCRIPTS=()\nexport PARALLEL=true" > settings.sh
            # - name: setup repos
            #   run: |
            #     cp main_repos.yaml repos.yaml
            #     yq e -i '.repositories.mirte-ros-packages.version = "fix-intro-rob"' repos.yaml
            #     yq e -i '.repositories.mirte-telemetrix4arduino.url =  "https://github.com/arendjan/telemetrix4arduino.git"' repos.yaml
            #     yq e -i '.repositories.mirte-telemetrix4arduino.version = "fix-intro-robotics"' repos.yaml
            # - name: Build
            #   run: |
            #         ./packerBuild.sh ${{ matrix.image }}
            - name: artifacts
              uses: actions/upload-artifact@v4
              if: always()
              with:
                path: build/*.img.xz
                name: ${{ matrix.image }}-${{ steps.extract_branch.outputs.branch }}-${{ steps.extract_branch.outputs.sha_short }}
            - name: Push to release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: build/*.img.xz
    build_installer:
      runs-on: ubuntu-latest
      # needs: [shellcheck, shfmt, build-and-push]
      steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Extract branch name
              shell: bash
              run: |
                echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: download artifacts
              uses: actions/download-artifact@v4
              with:
                name: mirte_orangepi3b-mirte-master-e49eddc
                run-id: 8249420079
                path: build
            - name: Create installer
              run: |
                    ls
                    ls build
                    df -h
                    rm -f workdir/*.img

                    ls -l build
                    df -h
                    sudo packer build buildInstaller.pkr.hcl # create installer image
                    df -h
                    sudo rm -rf /root/.cache/packer
                    df -h
                    rm -f build/${{ matrix.image }}.img
                    rm -f workdir/mirte_orangepi3b.img
                    df -h
                    ./scripts/finalize.sh $(realpath "./workdir/mirte_orangepi3b_installer.img") # finalize installer
                    df -h
            
