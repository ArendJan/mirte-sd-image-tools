Bootstrap: docker
From: ubuntu:bionic

%files
    scripts/mount_image.sh /
    scripts/umount_image.sh /
    scripts/install_zoef.sh /
    scripts/resize_image.sh /

%post
    # Update system
    apt update

    # Install locales
    apt install -y locales
    locale-gen "nl_NL.UTF-8"
    locale-gen "en_US.UTF-8"
    update-locale LC_ALL=en_US.UTF-8 LANGUAGE=en_US.UTF-8

    # Install prerequisites
    apt install -y qemu qemu-user-static binfmt-support xz-utils wget parted git

    # Download latest armbian image
    wget https://archive.armbian.com/orangepizero/archive/Armbian_20.08_Orangepizero_bionic_current_5.7.15.img.xz -P /
    unxz *.xz
    mv Armbian*.img zoef_sd.img
    #rm Armbian* *.7z

    # Resize image and partition (add 6Gb) TODO: or can I mount the image and then grow it
    dd if=/dev/zero bs=1MiB of=zoef_sd.img conv=notrunc oflag=append count=6000

    # Resize partition
    loopvar=`losetup -f`
    losetup $loopvar zoef_sd.img
    parted $loopvar resizepart 1 100%
    losetup -d $loopvar

    # Resize filesystem (TODO: call mount and umount scripts?)
    loopvar=`losetup -f`
    mkdir -p /mnt/armbian
    mount -o loop=$loopvar,offset=4194304 /zoef_sd.img /mnt/armbian #TODO: check if cnoun be mounted like in resize_image
    losetup -c $loopvar
    resize2fs -f $loopvar
    losetup -d $loopvar
    umount /mnt/armbian/

    # Setting permissions on scripts
    chmod +x /mount_image.sh /umount_image.sh /install_zoef.sh /resize_image.sh
    mkdir /working_dir

    # Installing the yaml merge script
    apt install -y make build-essential 
    cpan -fi YAML Hash::Merge::Simple 

%runscript
    /mount_image.sh && cp -R /working_dir /mnt/armbian 2> /dev/null || /bin/true

%apprun shell
    /mount_image.sh && cp -R /working_dir /mnt/armbian 2> /dev/null || /bin/true && chroot /mnt/armbian
